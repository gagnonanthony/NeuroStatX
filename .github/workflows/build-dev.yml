name: CI

on:
  pull_request:
    branches:
      - main
    types: [opened,reopened,synchronize]
    paths:
      - 'neurostatx/**/*.py'
      - 'pyproject.toml'
      - '!.github/**'
      - '.github/workflows/*.yml'
  push:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setting up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - name : Install flake8
        run: |
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --ignore=W605 --show-source --statistics

  Building:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v5
      - name: Install Graphviz
        uses: tlylt/install-graphviz@v1.0.0
      - name: Setting up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
            version: 1.7.1
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true
      - name: Install NeuroStatX & dependencies
        run: |
          poetry install --with=dev

  Testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v5
      - name: Install Graphviz
        uses: tlylt/install-graphviz@v1.0.0
      - name: Setting up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
            version: 1.7.1
            virtualenvs-create: true
            installer-parallel: true
      - name: Install NeuroStatX & dependencies
        run: |
          poetry install --with=dev --no-root --no-interaction
          # Weird workaround to get gdown to work.
          poetry run gdown -V
          wget -O ~/.cache/gdown/cookies.txt "https://www.dropbox.com/scl/fi/v2xzm8yrnaonaludeuthq/cookies.txt?rlkey=gy5qlhhbsj3fmf87lm0snfxs0&dl=0"
          poetry install --no-interaction
      - name: Pytest
        run: |
          source $(poetry env info --path)/bin/activate
          pytest --cov=./ --cov-report=xml -v
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}